#include <WiFi.h>
#include <WebSocketsClient.h>
#include <HTTPClient.h>
#include <DHT.h>
#include <LiquidCrystal.h>

// LCD Configuration
#define LCD_RS  27
#define LCD_E   26
#define LCD_D4  14
#define LCD_D5  12
#define LCD_D6  13
#define LCD_D7  15
LiquidCrystal lcd(LCD_RS, LCD_E, LCD_D4, LCD_D5, LCD_D6, LCD_D7);

// WiFi Configuration
const char* ssid = "Ben8";
const char* password = "flutters";

// Server Configuration
const char* websocket_server = "155.0.75.42";
const char* http_server = "155.0.75.42";
const uint16_t port = 3000;

// DHT Sensor
#define DHTPIN 4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Timing
const unsigned long sensorInterval = 2000;
unsigned long previousMillis = 0;
float currentTemp = 0;
float currentHumidity = 0;

WebSocketsClient webSocket;

void setup() {
  Serial.begin(115200);
  while (!Serial);

  // Serial2 from Mega (TX=17 RX=16)
  Serial2.begin(9600, SERIAL_8N1, 16, 17);

  // DHT
  dht.begin();

  // LCD
  lcd.begin(20, 4);
  lcd.print("Connecting WiFi...");

  // WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi Connected");
  lcd.clear();
  lcd.print("WiFi Connected");

  // WebSocket
  webSocket.begin(websocket_server, port, "/");
  webSocket.onEvent(webSocketEvent);

  delay(1000);
  lcd.clear();
  lcd.print("System Ready");
}

void loop() {
  webSocket.loop();

  // Read from Arduino Mega
  if (Serial2.available()) {
    String payload = Serial2.readStringUntil('\n');
    payload.trim();
    Serial.println("From Mega: " + payload);

    // Post to Node API
    HTTPClient http;
    http.begin("http://" + String(http_server) + ":" + port + "/api/device-events");
    http.addHeader("Content-Type", "application/json");
    http.POST(payload);
    http.end();
  }

  // Read DHT every interval
  if (millis() - previousMillis >= sensorInterval) {
    previousMillis = millis();
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    if (!isnan(h) && !isnan(t)) {
      currentTemp = t;
      currentHumidity = h;
      updateLCD();

      HTTPClient http;
      http.begin("http://" + String(http_server) + ":" + port + "/api/sensor-data");
      http.addHeader("Content-Type", "application/json");
      String payload = "{\"temperature\":" + String(t,1) + ",\"humidity\":" + String(h,1) + "}";
      http.POST(payload);
      http.end();
    }
  }
}

void updateLCD() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Temp: ");
  lcd.print(currentTemp, 1);
  lcd.print(" C");
  lcd.setCursor(0, 1);
  lcd.print("Hum:  ");
  lcd.print(currentHumidity, 1);
  lcd.print(" %");
}

void webSocketEvent(WStype_t type, uint8_t* payload, size_t length) {
  switch(type) {
    case WStype_DISCONNECTED:
      Serial.println("[WS] Disconnected");
      break;
    case WStype_CONNECTED:
      Serial.println("[WS] Connected");
      break;
    case WStype_TEXT:
      Serial.print("[WS] Received: ");
      Serial.println((char*)payload);

      // Forward WebSocket command to Mega
      Serial2.println((char*)payload);
      break;
  }
}
